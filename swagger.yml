# swagger.yml

openapi: 3.0.0
info:
  title: "Trails REST API Microservice"
  description: "An API about users and trails"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    User:
      type: "object"
      required:
        - lname
      properties:
        fname:
          type: "string"
        lname:
          type: "string"
        password:
          type: "string"
        email:
          type: "string"
    Trail:
      type: object
      properties:
        TrailID:
          type: integer
          description: The unique identifier for the trail (auto-incremented).
          readOnly: true
        DescriptionID:
          type: integer
          description: The unique identifier for the description (auto-incremented).
          readOnly: true
        Rating:
          type: integer
          description: Rating for the trail.
        description:
          type: object
          properties:
            Description:
              type: string
              description: A detailed description of the trail.
            DescriptionID:
              type: integer
              description: The ID of the description (auto-incremented).
              readOnly: true
            RouteID:
              type: integer
              description: The unique identifier for the route.
            Trail_Location:
              type: string
              description: The location of the trail.
            Trail_Name:
              type: string
              description: The name of the trail.
            difficulty:
              type: object
              properties:
                Difficulty:
                  type: string
                  description: Difficulty level of the trail.
                DifficultyID:
                  type: integer
                  description: The unique identifier for difficulty level (auto-incremented).
                  readOnly: true
                Duration:
                  type: integer
                  description: Duration of the trail in hours.
                Elevation_Gain:
                  type: integer
                  description: Elevation gain in meters.
                length:
                  type: integer
                  description: Length of the trail in kilometers.
        user_id:
          type: integer
          description: The unique identifier for the user.


  parameters:
    lname:
      name: "lname"
      description: "Last name of the user to get"
      in: path
      required: True
      schema:
        type: "string"
    TrailID:
      name: "TrailID"
      description: "ID of the trail"
      in: path
      required: true
      schema:
        type: "integer"

paths:
  /users:
    get:
      operationId: "users.read_all"
      tags:
        - "Users"
      summary: "Read the list of users"
      responses:
        "200":
          description: "Successfully read users list"
    post:
      operationId: "users.create"
      tags:
        - Users
      summary: "Create a user"
      requestBody:
          description: "User to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "user"
                $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "Successfully created user"
  /users/{lname}:
    get:
      operationId: "users.read_one"
      tags:
        - Users
      summary: "Read one user"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully read user"
    put:
      tags:
        - Users
      operationId: "users.update"
      summary: "Update a user"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "200":
          description: "Successfully updated user"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "user"
              $ref: "#/components/schemas/User"
    delete:
      tags:
        - Users
      operationId: "users.delete"
      summary: "Delete a user"
      parameters:
        - $ref: "#/components/parameters/lname"
      responses:
        "204":
          description: "Successfully deleted user"


  /trails:
    get:
      operationId: "trails.read_all"
      tags:
        - "Trails"
      summary: "Read the list of trails"
      responses:
        "200":
          description: "Successfully read trails list"
    post:
      operationId: "trails.create"
      tags:
        - Trails
      summary: "Create a trail"
      requestBody:
          description: "Trail to create"
          required: True
          content:
            application/json:
              schema:
                x-body-name: "trail"
                $ref: "#/components/schemas/Trail"
      responses:
        "201":
          description: "Successfully created trail"
  /trails/{TrailID}:
    get:
      operationId: "trails.read_one"
      tags:
        - Trails
      summary: "Read one trail"
      parameters:
        - $ref: "#/components/parameters/TrailID"
      responses:
        "200":
          description: "Successfully read trail"
    put:
      tags:
        - Trails
      operationId: "trails.update"
      summary: "Update a trail"
      parameters:
        - $ref: "#/components/parameters/TrailID"
      responses:
        "200":
          description: "Successfully updated trail"
      requestBody:
        content:
          application/json:
            schema:
              x-body-name: "trail"
              $ref: "#/components/schemas/Trail"
    delete:
      tags:
        - Trails
      operationId: "trails.delete"
      summary: "Delete a trail"
      parameters:
        - $ref: "#/components/parameters/TrailID"
      responses:
        "204":
          description: "Successfully deleted trail"


